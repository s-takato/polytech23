Errorcheck(str):=(
  regional(flg,tmp,tmp1,tmp2);
  //global ErrorList
  flg=0;
  tmp1=Indexall(str,"^");
  forall(tmp1,
    if(#==1,
      flg=1;
    ,
      if(str_(#-1)=="(",
        flg=1;
      ,
        if(#>=4,
          tmp=substring(str,#-4,#-1);
          if(contains(["sin","cos","tan"],tmp),
            flg=1; // hat error
          );
        );
      );  
    );
  );
  if(flg==0,
    tmp=Bracket(str);
    if(length(tmp)>0,
      tmp=tmp_(-1)_2;
      if(tmp!=-1,flg=2); // par error
    );
  );
  if(flg==0,
    tmp=Tomaxform(str);
    if(indexof(tmp,"___")>0,
      flg=3; // tomax error
    );
  );
  flg;
);

Dataformaxima(fname):=(
  regional(scLL,fout,out,maxLL,errL,
      shL,caL,mxscL,sqLL,ansLL,stL,
      dataL,maxL,sqL,ansL,mxs,ans,ca,
      stdatall,sall,qall,ns,
       tmp,tmp1,tmp2,tmp3);
  //global tab;
  maxLL=[];
  errL=[];
  setdirectory(Dirdata);
  import(fname);
  shL=line2list(shline);
  caL=Line2list(caline);
  mxscL=Strsplit(mxscline,tab);
  sqLL=Line2list(sqline);
  sqLL=apply(sqLL,#_(2..(length(#))));
  ansLL=Line2list(ansline);
  StdataLL=apply(ansLL,#_(1..3));
  sall=length(StdataLL);
  ansLL=apply(ansLL,#_(4..(length(#))));
  qall=length(shL);
  forall(1..sall,ns,
    stL=StdataLL_ns;
    if(stL_3!="未提出",
      dataL=[];
      maxL=[];
      sqL=sqLL_ns;
      ansL=ansLL_ns;
      if(length(ansL)!=qall,
        tmp3=[];
        forall(1..qall,tmp,
          tmp1=shL_tmp;
          tmp2=select(ansL,indexof(#,tmp1)>0);
          if(length(tmp2)>0,
            tmp3=append(tmp3,tmp2_1);
          ,
            tmp3=append(tmp3,tmp1);
          );
        );
        ansL=tmp3;
      );
      forall(1..qall,kq,
        ans=ansL_kq;
        mxs=mxscL_kq;
        if(contains(["0","-1"],mxs),
          if(mxs=="0", maxL=append(maxL,"no"));
          if(mxs=="-1", maxL=append(maxL,"ns"));
        ,
          if(indexof(ans,"=")>0,
            tmp=Strsplit(ans,"=");
            ans=tmp_(-1);
          );
          ans=Removespace(ans);
          ans=replace(ans,"tfr","fr");
          tmp=Errorcheck(ans);
          if(tmp>0,
            errL=append(errL,[ns,kq,ans,flg]);
          ,
            ca=caL_kq;
            tmp=sqL_kq;
            if(islist(ca),ca=ca_2);
            if(isreal(ca),ca=text(ca),ca=Removespace(ca));
            ca=replace(ca,"tfr","fr");
            if(indexof(ca,"=")>0,
              tmp=Strsplit(ca,"=");
              ca=tmp_(-1);
            );
            if(length(ans)>0,
              if(mxs=="1",mxs="ca-sa");
              ansm="("+Tomaxform(ans)+")";
              cam="("+Tomaxform(ca)+")";
              tmp=Assign(mxs,["ca",cam,"sa",ansm]);
              maxL=append(maxL,tmp);
            ,
              maxL=append(maxL,"na"); 
            );           
          );
        );
      );
      maxLL=append(maxLL,maxL);
    );
  );
  if(length(errL)>0,
    maxLL=prepend("Error",errL);
  );
  maxLL;
);

Scoringmaxima(nn,fname,maxLL,oporg):=(
  regional(op,flg,cmdL,ns,qn,ansLL,ansL,
     headL,scLL,scL,mrkL,tmp,tmp1,tmp2,tmp3,
     str,estr,pe);
  //global ansline
  setdirectory(Dirdata);
  import(fname);
  ansLL=Line2list(ansline);
  headL=apply(1..(length(ansLL)),ansLL_#_(1..3));
  ansLL=apply(1..(length(ansLL)),
                  remove(ansLL_#,headL_#));
  mrkL=Strsplit(mrkline,tab);
  op=oporg;
//  maxLL=maxLLorg;
//  tmp=select(op,!isstring(#));
//  if(length(tmp)>0,
//    op=remove(op,tmp);
//    tmp=tmp_1;
//    maxLL=maxLL_tmp;
//  );
  setdirectory(Dirwork);
  cmdL=[
    "dtLL:"+text(maxLL),[],
    "res:ratsimp(dtLL)",[],
    "res",[]
  ];
  flg=CalcbyM("res",cmdL,op);
  if(flg==2,
    tmp=Fhead+"res";
    tmp1=Readlines(Dircdy+"/fig",tmp+".txt");
    tmp2=select(1..(length(tmp1)),
           indexof(tmp1_#,tmp)>0);
    if(length(tmp2)>0,
      tmp2=tmp2_1+1;
      estr=tmp1_tmp2;
      tmp=Readlines(Dircdy+"/fig",tmp+".max");
      str=select(tmp,indexof(#,"dtLL:")>0);
      str=str_1;
      pe=indexof(str,estr);
      if(pe>0,
        tmp=Bracket(str,"[]");
        tmp=select(tmp,(#_1<=pe)&(#_2==2));
        tmp=apply(tmp,#_1);
        ns=length(tmp);
        tmp1=tmp_(-1);
        tmp=Getlevel(str);
        tmp=select(tmp,#_2==0);
        tmp=select(tmp,(#_1<=pe)&(#_1>=tmp1));
        nq=length(tmp)+2;
        dispL=append(dispL,
          ["Error",clrr]);
        dispL=append(dispL,
          ["nn="+nn+" st="+ns+" qu="+nq,clrb]);
      );
    );
  ,
    res=substring(res,1,length(res)-1);
    tmp=Getlevel(res,",","[]");
    tmp=select(tmp,#_2==0);
    if(length(tmp)>0,
      tmp=apply(tmp,#_1);
      forall(tmp,res_#=tab);
      res=Strsplit(res,tab);
    ,
      res=[res];
    );
    scLL=[];
    forall(res,tmp1,
      tmp2=substring(tmp1,1,length(tmp1)-1);
      tmp=Getlevel(tmp2,",");
      tmp=select(tmp,#_2==0);
      if(length(tmp)>0,
        tmp=apply(tmp,#_1);
        forall(tmp,tmp2_#=tab);
        tmp=Strsplit(tmp2,tab);
      ,
        tmp=[tmp2];
      );
//      tmp=tmp_(2..(length(tmp)));
      scLL=append(scLL,tmp);
    );
    forall(1..(length(ansLL)),nn,
      ansL=ansLL_nn;
      scL=scLL_nn;
      forall(1..(length(ansL)),qn,
        tmp1=ansL_qn;
        tmp2=scL_qn;
        if(contains(["no","na","ns"],tmp2),
          if(tmp2=="na",ansL_qn=tmp1+"::0");
          if(tmp2=="ns",ansL_qn=tmp1+"::");
        ,
          if(tmp2=="0", //1112
            ansL_qn=tmp1+"::"+mrkL_qn;
          ,
            ansL_qn=tmp1+"::0";
          );
        );
      );
      ansLL_nn=concat(headL_nn,ansL);
    );
    tmp1=List2line(ansLL);
  );
  tmp1;
);
